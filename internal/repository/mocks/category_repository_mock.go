// Code generated by mockery v2.23.2. DO NOT EDIT.

package mocks

import (
	context "context"

	entity "github.com/jailtonjunior94/go-uow/internal/entity"
	mock "github.com/stretchr/testify/mock"
)

// CategoryRepositoryInterface is an autogenerated mock type for the CategoryRepositoryInterface type
type CategoryRepositoryInterface struct {
	mock.Mock
}

// Insert provides a mock function with given fields: ctx, category
func (_m *CategoryRepositoryInterface) Insert(ctx context.Context, category entity.Category) error {
	ret := _m.Called(ctx, category)

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, entity.Category) error); ok {
		r0 = rf(ctx, category)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

type mockConstructorTestingTNewCategoryRepositoryInterface interface {
	mock.TestingT
	Cleanup(func())
}

// NewCategoryRepositoryInterface creates a new instance of CategoryRepositoryInterface. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewCategoryRepositoryInterface(t mockConstructorTestingTNewCategoryRepositoryInterface) *CategoryRepositoryInterface {
	mock := &CategoryRepositoryInterface{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
